<Window x:Class="Project_127.SaveFileHandler"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project_127"
        mc:Ignorable="d"
        Title="SaveFileHandler" Height="450" Width="700"        
        WindowStyle="None" 
        AllowsTransparency="True" 
        MouseLeftButtonDown="Window_MouseLeftButtonDown" 
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="{x:Static local:CustomColors.SFH_Background}"
        Icon="/Artwork/icon.png">
    <Window.Resources>


        <!--#region Scroll Viewer Style-->
        <!--this is stolen from another project of mine, where it was stolen from another old project where it was probably stolen off stack overflow...-->
        
        
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{x:Static local:CustomColors.SFH_SVForeground}" />
            <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_SVBackground}" />
            <Setter Property="Width" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="16" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="12" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="12.5" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="sv" TargetType="ScrollViewer">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        

        <!--#endregion-->
  
 
        <Style TargetType="Button" x:Key="btn">
            <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_ButtonBackground}"/>
            <Setter Property="Foreground" Value="{x:Static local:CustomColors.SFH_ButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{x:Static local:CustomColors.SFH_ButtonBorderBrush}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Tahoma"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="{x:Static local:CustomColors.SFH_ButtonBorderThickness}"
                            Padding="5"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_ButtonMOBackground}"/>
                    <Setter Property="Foreground" Value="{x:Static local:CustomColors.SFH_ButtonMOForeground}"/>
                    <Setter Property="BorderBrush" Value="{x:Static local:CustomColors.SFH_ButtonMOBorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="lbl" TargetType="Label">
            <Setter Property="Foreground" Value="{x:Static local:CustomColors.SFH_LabelForeground}" />
            <Setter Property="FontFamily" Value="Tahoma" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="15" />
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="RowHeight" Value="30"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="RowBackground" Value="{x:Static local:CustomColors.SFH_DGCellBackground}"/>
            <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_DGBackground}"/>
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>
        <Style TargetType="ColumnDefinition">

        </Style>
        
    </Window.Resources>
    <Border BorderBrush="{x:Static local:CustomColors.SFH_BorderBrush}" BorderThickness="2">
        <Border BorderBrush="{x:Static local:CustomColors.SFH_BorderBrush_Inner}" BorderThickness="2" Margin="10" CornerRadius="10">
            <Grid>
                <Grid.RowDefinitions> 
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Label Style="{StaticResource lbl}" Grid.Row="0" Grid.Column="0" Content="Backup Savefiles"/>
                <Button x:Name="btn_Refresh" Style="{StaticResource btn}" Grid.Row="0" Grid.Column="1" Content="Refresh" Click="btn_Refresh_Click"/>
                <Label Style="{StaticResource lbl}" Grid.Row="0" Grid.Column="2" Content="GTA V Savefiles"/>

                <Button Style="{StaticResource btn}" x:Name="btn_RightArrow" Grid.Row="1" Grid.Column="1" Height="64" Width="64" Click="btn_RightArrow_Click">
                    <Image Source="/Artwork/rightarrow.png"/>
                </Button>
                <Button Style="{StaticResource btn}" x:Name="btn_LeftArrow" Grid.Row="2" Grid.Column="1" Height="64" Width="64" Click="btn_LeftArrow_Click">
                    <Image Source="/Artwork/leftarrow.png"/>
                </Button>

                <Button Style="{StaticResource btn}" x:Name="btn_close" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Content="Close" Click="btn_close_Click"/>

                <Border Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" Margin="10,5,5,5" BorderBrush="{x:Static local:CustomColors.SFH_BorderBrush_Inner}" BorderThickness="2">
                    <ScrollViewer x:Name="sv_BackupFiles">
                        <DataGrid x:Name="dg_BackupFiles" ItemsSource="{Binding BackupFiles}" PreviewMouseWheel="Dg_BackupFiles_PreviewMouseWheel">
                            <!--cant style this easily, since it does not derive from FrameworkElement-->
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_DGCellSelected}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Filename" Binding="{Binding Filename, Mode=OneWay}" Width="*" Foreground="{x:Static local:CustomColors.SFH_DGForeground}" FontSize="20" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </Border>

                <Border Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" BorderBrush="{x:Static local:CustomColors.PU_BorderBrush_Inner}" BorderThickness="2"  Margin="5,5,10,5">
                    <ScrollViewer x:Name="sv_GTAFiles">
                        <DataGrid x:Name="dg_GTAFiles" ItemsSource="{Binding GTAFiles}"  PreviewMouseWheel="Dg_GTAFiles_PreviewMouseWheel">
                            <!--cant style this easily, since it does not derive from FrameworkElement-->
                            <!--doing it programatically also turned out to be a pain in the ass-->
                            <!--So hardcoded XAML will have to do-->
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                                            <Setter Property="Background" Value="{x:Static local:CustomColors.SFH_DGCellSelected}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Filename" Binding="{Binding Filename, Mode=OneWay}" Width="*" Foreground="{x:Static local:CustomColors.SFH_DGForeground}" FontSize="20" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Border>
    </Border>
</Window>
