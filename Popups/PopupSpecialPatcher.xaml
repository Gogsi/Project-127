<Window x:Class="Project_127.Popups.PopupSpecialPatcher"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Project_127"
        mc:Ignorable="d"
    Title="Popup" 
        Background="{x:Static local:MyColors.PU_Background}"
        WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" MouseLeftButtonDown="Window_MouseLeftButtonDown"
        Height="300"
        Width="550"
        SourceInitialized="Window_SourceInitialized"
        SizeToContent="Manual"
        Icon="/Artwork/icon.png">
    <Window.Resources>
        <Style x:Key="btn_mini" TargetType="{x:Type Button}" BasedOn="{StaticResource btn_hamburgeritem}">
            <Setter Property="Margin" Value="0,0"/>
            <Setter Property="BorderBrush" Value="{x:Static local:MyColors.MW_ButtonHamburgerMenuMOBackground}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style x:Key="dg_pl" TargetType="DataGrid">
            <!--<Setter Property="ContextMenu" Value="{StaticResource ContextMenuKeyDataGrid}"/>-->
            <Setter Property="RowHeight" Value="35"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="AlternatingRowBackground" Value="{x:Static local:MyColors.SFH_DGAlternateRowBackground}"/>
            <Setter Property="RowBackground" Value="{x:Static local:MyColors.SFH_DGRowBackground}"/>
            <Setter Property="Foreground" Value="{x:Static local:MyColors.SFH_DGForeground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderBrush" Value="{x:Static local:MyColors.SFH_DGCellBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="{x:Static local:MyColors.SFH_DGCellBorderThickness}"/>
                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    <!--<Setter Property="ContextMenu" Value="{StaticResource ContextMenuKeyDataGridCell}"/>-->
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Static local:MyColors.SFH_DGSelectedBackground}" />
                            <Setter Property="Foreground" Value="{x:Static local:MyColors.SFH_DGSelectedForeground}" />
                            <Setter Property="BorderBrush" Value="{x:Static local:MyColors.SFH_DGSelectedBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{x:Static local:MyColors.SFH_DGSelectedBorderThickness}" />
                        </Trigger>
                    </Style.Triggers>
                    <Style.Resources>
                        
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>
    <Border BorderBrush="{x:Static local:MyColors.PU_BorderBrush}" BorderThickness="2" >
        <Grid Margin="10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Grid.ColumnSpan="6" Grid.RowSpan="2" BorderBrush="{x:Static local:MyColors.PU_BorderBrush}" BorderThickness="1" >
                <ScrollViewer Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="0" Grid.RowSpan="1">
                    <DataGrid x:Name="dg_patches" Style="{StaticResource dg_pl}">
                        <DataGrid.Resources>
                            <Style TargetType="DataGridRow">
                                <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                            </Style>
                            <Style x:Key="dg_texboxstyle" TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <!--<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=Text}"/>-->
                                <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding Enabled}" Width="10">
                                <DataGridCheckBoxColumn.ElementStyle>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="ToolTip" Value="Enabled"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="ToolTip" Value="Disabled"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridCheckBoxColumn.ElementStyle>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}" ElementStyle="{StaticResource dg_texboxstyle}" Width="*" FontSize="20">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="Patch Name" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="RVA" Binding="{Binding hexRVA, Mode=OneWay}" ElementStyle="{StaticResource dg_texboxstyle}" Width="*" FontSize="20">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="Patch RVA" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Patch" Binding="{Binding hexContent, Mode=OneWay}" ElementStyle="{StaticResource dg_texboxstyle}" Width="*" FontSize="20">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="Patch Content" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="KeyBind" Binding="{Binding stringKeyBind, Mode=OneWay}" ElementStyle="{StaticResource dg_texboxstyle}" Width="*" FontSize="20">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="Patch Keybind" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
                
            </Border>
            <Button x:Name="btn_patch_plus" Content="+" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource btn_mini}" Margin="0,0,1.5,0" Click="btn_patch_plus_Click"/>
            <Button x:Name="btn_patch_minus" Content="-" Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="3" Style="{StaticResource btn_mini}" Margin="1.5,0,0,0" Click="btn_patch_minus_Click"/>
            <Button x:Name="btn_DisableAll" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource PU_btn}" Content="Disable All" Click="btn_DisableAll_Click"/>
            <Button x:Name="btn_EnableAll" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" Style="{StaticResource PU_btn}" Content="Enable All" Click="btn_EnableAll_Click"/>
            <Button x:Name="btn_Exit" Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2" Style="{StaticResource PU_btn}" Content="Exit" Click="btn_Exit_Click"/>


        </Grid>

    </Border>
    
</Window>
