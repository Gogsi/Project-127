<Window x:Class="Project_127.ColorPicker"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:cefSharp="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
      xmlns:local="clr-namespace:Project_127"
      mc:Ignorable="d" 
      Height="400" Width="240"
      WindowStyle="ToolWindow"
      ResizeMode="CanMinimize"
      Title="ColorPicker">

    <Grid Height="400" Width="240">
        <cefSharp:ChromiumWebBrowser 
            x:Name="browser" 
            HorizontalAlignment="Right" 
            VerticalAlignment="Bottom" 
            Width="240" Height="400" 
            Margin="0,0,0,0" 
            Address="data:text/html;base64," 
            JavascriptMessageReceived="browser_JavascriptMessageReceived"/>
    </Grid>
</Window>
