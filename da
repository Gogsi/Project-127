[1mdiff --git a/App.xaml b/App.xaml[m
[1mindex aa68e30..06fd380 100644[m
[1m--- a/App.xaml[m
[1m+++ b/App.xaml[m
[36m@@ -2,7 +2,6 @@[m
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"[m
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"[m
              xmlns:local="clr-namespace:Project_127"[m
[31m-            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"[m
              Startup="Application_Startup"[m
              SessionEnding="Application_SessionEnding"[m
              StartupUri="MainWindow.xaml">[m
[36m@@ -516,7 +515,7 @@[m
         </Style>[m
 [m
 [m
[31m-        <Style x:Key="MyColorPicker" TargetType="xctk:ColorPicker">[m
[32m+[m[32m        <!--<Style x:Key="MyColorPicker" TargetType="xctk:ColorPicker">[m
             <Setter Property="ColorMode" Value="ColorCanvas"/>[m
             <Setter Property="Background" Value="Transparent"/>[m
             <Setter Property="BorderThickness" Value="2"/>[m
[36m@@ -527,7 +526,7 @@[m
             <Setter Property="ShowStandardColors" Value="False"/>[m
             <Setter Property="ShowTabHeaders" Value="False"/>[m
             <Setter Property="ShowDropDownButton" Value="False"/>[m
[31m-        </Style>[m
[32m+[m[32m        </Style>-->[m
 [m
     </Application.Resources>[m
 </Application>[m
[1mdiff --git a/MainWindow.xaml.cs b/MainWindow.xaml.cs[m
[1mindex c43a8f7..cbf9036 100644[m
[1m--- a/MainWindow.xaml.cs[m
[1m+++ b/MainWindow.xaml.cs[m
[36m@@ -101,12 +101,12 @@[m [mMain To do:[m
 [m
 [m
 			Quick and dirty notes:[m
[31m-				- CTRL + Arrows  does nothing atm. Gonna swap there[m
[31m-				- Selection after deletion is fucked.[m
 				- Title from GTAV Overlay is missing (waiting on Dragon for that)[m
[32m+[m				[32m- CPU usage (probably due to window change listener, maybe poll the foreground window every XYZ ms)[m
[32m+[m				[32m- Antivirus thing...commit and revert and see if it still happens...[m
 				- Yoshis Info[m
[31m-				- ReadMe shit[m
[31m-				- Jumpscript stuff[m
[32m+[m				[32m- ReadMe shit (PoC is there, I think)[m
[32m+[m				[32m- Jumpscript Send Key stuff[m
 [m
 		=== Keep in Mind === [m
 [m
[1mdiff --git a/Overlay/GTAOverlay.cs b/Overlay/GTAOverlay.cs[m
[1mindex da993c3..4ed3fef 100644[m
[1m--- a/Overlay/GTAOverlay.cs[m
[1m+++ b/Overlay/GTAOverlay.cs[m
[36m@@ -12,7 +12,7 @@[m [mnamespace Project_127[m
     {[m
 		// If set to false, this starts and keeps KeyboardListenerEvent running 100% of the time.[m
 		// Automatically set to true if we compile debug[m
[31m-		public static bool DebugMode = true;[m
[32m+[m		[32mpublic static bool DebugMode = false;[m[41m[m
 		public const string targetWindowDebug = "TeamSpeak 3";[m
 		public const string targetWindowNonDebug = "Grand Theft Auto V";[m
 [m
[1mdiff --git a/Overlay/NoteOverlayPages/NoteOverlay_Look.xaml b/Overlay/NoteOverlayPages/NoteOverlay_Look.xaml[m
[1mindex 85156c7..4eaf7e7 100644[m
[1m--- a/Overlay/NoteOverlayPages/NoteOverlay_Look.xaml[m
[1m+++ b/Overlay/NoteOverlayPages/NoteOverlay_Look.xaml[m
[36m@@ -5,10 +5,10 @@[m
       xmlns:d="http://schemas.microsoft.com/expression/blend/2008" [m
       xmlns:converters="clr-namespace:Project_127.Overlay.NoteOverlayPages"[m
       xmlns:local="clr-namespace:Project_127"[m
[31m-      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"[m
       mc:Ignorable="d" [m
       d:DesignHeight="450" d:DesignWidth="800"[m
       Title="NoteOverlay_Look">[m
[32m+[m[32m      <!--xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"-->[m
     <Grid>[m
         <Grid.Resources>[m
             <converters:PrintableFontFamilyConverter  x:Key="PrintableFontFamilyConverter" />[m
[1mdiff --git a/Overlay/NoteOverlayPages/NoteOverlay_NoteFiles.xaml.cs b/Overlay/NoteOverlayPages/NoteOverlay_NoteFiles.xaml.cs[m
[1mindex 54209fb..adb87bf 100644[m
[1m--- a/Overlay/NoteOverlayPages/NoteOverlay_NoteFiles.xaml.cs[m
[1m+++ b/Overlay/NoteOverlayPages/NoteOverlay_NoteFiles.xaml.cs[m
[36m@@ -21,6 +21,8 @@[m [musing Project_127.HelperClasses;[m
 using Project_127.Overlay;[m
 using Project_127.Popups;[m
 using Project_127.MySettings;[m
[32m+[m[32musing System.Windows.Controls.Primitives;[m
[32m+[m[32musing Popup = Project_127.Popups.Popup;[m
 [m
 namespace Project_127.Overlay.NoteOverlayPages[m
 {[m
[36m@@ -76,6 +78,7 @@[m [mnamespace Project_127.Overlay.NoteOverlayPages[m
 			{[m
 				MyNoteFiles.MyAdd(new MyNoteFile(mystring));[m
 			}[m
[32m+[m			[32mSelectFirst();[m
 		}[m
 [m
 [m
[36m@@ -144,14 +147,23 @@[m [mnamespace Project_127.Overlay.NoteOverlayPages[m
 			{[m
 				MyNoteFiles.MyRemove(MNF);[m
 			}[m
[32m+[m			[32mSelectFirst();[m
[32m+[m		[32m}[m
 [m
[32m+[m		[32mprivate void SelectFirst()[m
[32m+[m		[32m{[m
 			if (dg_Files.Items.Count > 0)[m
 			{[m
[31m-				dg_Files.SelectedItems.Clear();[m
[31m-				dg_Files.SelectedItems.Add(dg_Files.Items[0]);[m
[32m+[m				[32m//dg_Files.SelectedItems.Add(dg_Files.Items[0]);[m
[32m+[m
[32m+[m				[32m//dg_Files.CurrentCell = new DataGridCellInfo(dg_Files.Items[0], dg_Files.Columns[0]);[m
[32m+[m				[32m//dg_Files.SelectedItems.Clear();[m
[32m+[m				[32m//dg_Files.SelectedCells.Add(dg_Files.CurrentCell);[m
[32m+[m
[32m+[m
[32m+[m				[32mSelectRowByIndex(dg_Files, 0);[m
 			}[m
 [m
[31m-			//SelectRowByIndex(dg_Files, 0);[m
 		}[m
 [m
 		public static void SelectRowByIndex(DataGrid dataGrid, int rowIndex)[m
[36m@@ -175,7 +187,58 @@[m [mnamespace Project_127.Overlay.NoteOverlayPages[m
 				dataGrid.ScrollIntoView(item);[m
 				row = dataGrid.ItemContainerGenerator.ContainerFromIndex(rowIndex) as DataGridRow;[m
 			}[m
[31m-			//TODO: Retrieve and focus a DataGridCell object[m
[32m+[m			[32mif (row != null)[m
[32m+[m			[32m{[m
[32m+[m				[32mDataGridCell cell = GetCell(dataGrid, row, 0);[m
[32m+[m				[32mif (cell != null)[m
[32m+[m					[32mcell.Focus();[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mpublic static T FindVisualChild<T>(DependencyObject obj) where T : DependencyObject[m
[32m+[m		[32m{[m
[32m+[m			[32mfor (int i = 0; i < VisualTreeHelper.GetChildrenCount(obj); i++)[m
[32m+[m			[32m{[m
[32m+[m				[32mDependencyObject child = VisualTreeHelper.GetChild(obj, i);[m
[32m+[m				[32mif (child != null && child is T)[m
[32m+[m					[32mreturn (T)child;[m
[32m+[m				[32melse[m
[32m+[m				[32m{[m
[32m+[m					[32mT childOfChild = FindVisualChild<T>(child);[m
[32m+[m					[32mif (childOfChild != null)[m
[32m+[m						[32mreturn childOfChild;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn null;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mpublic static DataGridCell GetCell(DataGrid dataGrid, DataGridRow rowContainer, int column)[m
[32m+[m		[32m{[m
[32m+[m			[32mif (rowContainer != null)[m
[32m+[m			[32m{[m
[32m+[m				[32mDataGridCellsPresenter presenter = FindVisualChild<DataGridCellsPresenter>(rowContainer);[m
[32m+[m				[32mif (presenter == null)[m
[32m+[m				[32m{[m
[32m+[m					[32m/* if the row has been virtualized away, call its ApplyTemplate() method[m[41m [m
[32m+[m					[32m * to build its visual tree in order for the DataGridCellsPresenter[m
[32m+[m					[32m * and the DataGridCells to be created */[m
[32m+[m					[32mrowContainer.ApplyTemplate();[m
[32m+[m					[32mpresenter = FindVisualChild<DataGridCellsPresenter>(rowContainer);[m
[32m+[m				[32m}[m
[32m+[m				[32mif (presenter != null)[m
[32m+[m				[32m{[m
[32m+[m					[32mDataGridCell cell = presenter.ItemContainerGenerator.ContainerFromIndex(column) as DataGridCell;[m
[32m+[m					[32mif (cell == null)[m
[32m+[m					[32m{[m
[32m+[m						[32m/* bring the column into view[m
[32m+[m						[32m * in case it has been virtualized away */[m
[32m+[m						[32mdataGrid.ScrollIntoView(rowContainer, dataGrid.Columns[column]);[m
[32m+[m						[32mcell = presenter.ItemContainerGenerator.ContainerFromIndex(column) as DataGridCell;[m
[32m+[m					[32m}[m
[32m+[m					[32mreturn cell;[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m			[32mreturn null;[m
 		}[m
 [m
 		private void btn_PresetLoad_Click(object sender, RoutedEventArgs e)[m
[36m@@ -236,20 +299,10 @@[m [mnamespace Project_127.Overlay.NoteOverlayPages[m
 [m
 		private void dg_Files_PreviewKeyDown(object sender, KeyEventArgs e)[m
 		{[m
[31m-			if ((e.Key == Key.Up && Keyboard.IsKeyDown(Key.LeftCtrl)) ||[m
[31m-				(e.Key == Key.Up && Keyboard.IsKeyDown(Key.RightCtrl)))[m
[31m-			{[m
[31m-[m
[31m-				e.Handled = true;[m
[31m-			}[m
[31m-			if ((e.Key == Key.Down && Keyboard.IsKeyDown(Key.LeftCtrl)) ||[m
[31m-				(e.Key == Key.Down && Keyboard.IsKeyDown(Key.RightCtrl)))[m
[31m-			{[m
[31m-				e.Handled = true;[m
[31m-			}[m
 			if (e.Key == Key.Delete)[m
 			{[m
 				btn_Delete_Click(null, null);[m
[32m+[m				[32me.Handled = true;[m
 			}[m
 		}[m
 [m
[1mdiff --git a/Project 127.csproj b/Project 127.csproj[m
[1mindex f9899d8..30fe553 100644[m
[1m--- a/Project 127.csproj[m	
[1m+++ b/Project 127.csproj[m	
[36m@@ -172,21 +172,6 @@[m
     <Reference Include="WpfAnimatedGif, Version=2.0.0.0, Culture=neutral, PublicKeyToken=9e7cd3b544a090dc, processorArchitecture=MSIL">[m
       <HintPath>packages\WpfAnimatedGif.2.0.0\lib\net40\WpfAnimatedGif.dll</HintPath>[m
     </Reference>[m
[31m-    <Reference Include="Xceed.Wpf.AvalonDock, Version=4.0.0.0, Culture=neutral, PublicKeyToken=3e4669d2f30244f4, processorArchitecture=MSIL">[m
[31m-      <HintPath>packages\Extended.Wpf.Toolkit.4.0.1\lib\net40\Xceed.Wpf.AvalonDock.dll</HintPath>[m
[31m-    </Reference>[m
[31m-    <Reference Include="Xceed.Wpf.AvalonDock.Themes.Aero, Version=4.0.0.0, Culture=neutral, PublicKeyToken=3e4669d2f30244f4, processorArchitecture=MSIL">[m
[31m-      <HintPath>packages\Extended.Wpf.Toolkit.4.0.1\lib\net40\Xceed.Wpf.AvalonDock.Themes.Aero.dll</HintPath>[m
[31m-    </Reference>[m
[31m-    <Reference Include="Xceed.Wpf.AvalonDock.Themes.Metro, Version=4.0.0.0, Culture=neutral, PublicKeyToken=3e4669d2f30244f4, processorArchitecture=MSIL">[m
[31m-      <HintPath>packages\Extended.Wpf.Toolkit.4.0.1\lib\net40\Xceed.Wpf.AvalonDock.Themes.Metro.dll</HintPath>[m
[31m-    </Reference>[m
[31m-    <Reference Include="Xceed.Wpf.AvalonDock.Themes.VS2010, Version=4.0.0.0, Culture=neutral, PublicKeyToken=3e4669d2f30244f4, processorArchitecture=MSIL">[m
[31m-      <HintPath>packages\Extended.Wpf.Toolkit.4.0.1\lib\net40\Xceed.Wpf.AvalonDock.Themes.VS2010.dll</HintPath>[m
[31m-    </Reference>[m
[31m-    <Reference Include="Xceed.Wpf.Toolkit, Version=4.0.0.0, Culture=neutral, PublicKeyToken=3e4669d2f30244f4, processorArchitecture=MSIL">[m
[31m-      <HintPath>packages\Extended.Wpf.Toolkit.4.0.1\lib\net40\Xceed.Wpf.Toolkit.dll</HintPath>[m
[31m-    </Reference>[m
   </ItemGroup>[m
   <ItemGroup>[m
     <ApplicationDefinition Include="App.xaml">[m
[1mdiff --git a/ReadMe.xaml b/ReadMe.xaml[m
[1mindex 5abc8c8..aa57e9a 100644[m
[1m--- a/ReadMe.xaml[m
[1m+++ b/ReadMe.xaml[m
[36m@@ -37,14 +37,16 @@[m
                     <RowDefinition Height="3.5*"/>[m
                     <RowDefinition Height="*"/>[m
                 </Grid.RowDefinitions>[m
[31m-                <Label x:Name="Grid_SpeedRun_Lbl" Style="{StaticResource lbl}" Grid.Row="0">[m
[31m-                    <TextBlock>[m
[32m+[m[32m                <!--<Label x:Name="Grid_SpeedRun_Lbl" Style="{StaticResource lbl}" Grid.Row="0">[m
[32m+[m[32m                    <TextBlock TextWrapping="Wrap" Text="{Binding MyText}">[m
                     ASDF[m
[31m-                       <Hyperlink RequestNavigate="Hyperlink_RequestNavigate">Click here[m
[31m-     </Hyperlink>[m
[32m+[m[32m                       <Hyperlink RequestNavigate="Hyperlink_RequestNavigate">Click here</Hyperlink>[m
                     FDSA[m
                     </TextBlock>[m
[31m-                </Label>[m
[32m+[m[32m                </Label>-->[m
[32m+[m[32m                <RichTextBox Grid.Row="0" x:Name="myRTB"  IsReadOnly="True" IsDocumentEnabled="True" HorizontalAlignment="Center" HorizontalContentAlignment="Center">[m
[32m+[m[41m                    [m
[32m+[m[32m                </RichTextBox>[m
                 <Button x:Name="Grid_SpeedRun_Btn" Style="{StaticResource btn_SM}" Grid.Row="1" Margin="100,0,100,30" Content="Click Me" Click="Grid_SpeedRun_Btn_Click"/>[m
             </Grid>[m
         </Border>[m
[1mdiff --git a/ReadMe.xaml.cs b/ReadMe.xaml.cs[m
[1mindex 9f67c0f..1e804eb 100644[m
[1m--- a/ReadMe.xaml.cs[m
[1m+++ b/ReadMe.xaml.cs[m
[36m@@ -27,6 +27,30 @@[m [mnamespace Project_127[m
 		/// </summary>[m
 		public static ReadMeStates LastReadMeState = ReadMeStates.About;[m
 [m
[32m+[m		[32mpublic string MyText = "ASDFFFFFFF";[m
[32m+[m
[32m+[m		[32mprivate void AddHyperlinkText(string linkURL, string linkName,[m
[32m+[m			[32m  string TextBeforeLink, string TextAfterLink)[m
[32m+[m		[32m{[m
[32m+[m			[32mParagraph para = new Paragraph();[m
[32m+[m			[32mpara.Margin = new Thickness(0); // remove indent between paragraphs[m
[32m+[m
[32m+[m			[32mHyperlink link = new Hyperlink();[m
[32m+[m			[32mlink.IsEnabled = true;[m
[32m+[m			[32mlink.Inlines.Add(linkName);[m
[32m+[m			[32mlink.NavigateUri = new Uri(linkURL);[m
[32m+[m			[32mlink.RequestNavigate += Hyperlink_RequestNavigate;[m
[32m+[m
[32m+[m			[32mpara.Inlines.Add(new Run("[" + DateTime.Now.ToLongTimeString() + "]: "));[m
[32m+[m			[32mpara.Inlines.Add(TextBeforeLink);[m
[32m+[m			[32mpara.Inlines.Add(link);[m
[32m+[m			[32mpara.Inlines.Add(new Run(TextAfterLink));[m
[32m+[m
[32m+[m			[32mmyRTB.Document.Blocks.Add(para);[m
[32m+[m			[32mmyRTB.Document.Blocks.Remove(myRTB.Document.Blocks.FirstBlock);[m
[32m+[m			[32mmyRTB.Document.Blocks.Add(para);[m
[32m+[m		[32m}[m
[32m+[m
 		/// <summary>[m
 		/// Constructor[m
 		/// </summary>[m
[36m@@ -38,6 +62,13 @@[m [mnamespace Project_127[m
 			// Setting ReadMeState to the LastReadMeState[m
 			ReadMeState = ReadMe.LastReadMeState;[m
 [m
[32m+[m			[32mLoadSpeedrun();[m
[32m+[m			[32mLoadAbout();[m
[32m+[m			[32mLoadCredits();[m
[32m+[m			[32mLoadHelp();[m
[32m+[m
[32m+[m			[32mAddHyperlinkText("https://google.com", "google", "This here is ", " a google link\nAnd it supports linebreaks");[m
[32m+[m
 			string msg1 = "" +[m
 				"This text will contain Information about GTAV Speedrunning.\n" +[m
 				"Paragraphs explaining the basics, rules, categories etc.\n" +[m
[36m@@ -124,6 +155,26 @@[m [mI hope whoever reads this has a great day : )[m
 			*/[m
 		}[m
 [m
[32m+[m		[32mprivate void LoadSpeedrun()[m
[32m+[m		[32m{[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mprivate void LoadAbout()[m
[32m+[m		[32m{[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mprivate void LoadHelp()[m
[32m+[m		[32m{[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mprivate void LoadCredits()[m
[32m+[m		[32m{[m
[32m+[m
[32m+[m		[32m}[m
[32m+[m
 		/// <summary>[m
 		/// Enum for all ReadMeStates[m
 		/// </summary>[m
[1mdiff --git a/packages.config b/packages.config[m
[1mindex 8612eb3..76dbc9a 100644[m
[1m--- a/packages.config[m
[1m+++ b/packages.config[m
[36m@@ -7,7 +7,6 @@[m
   <package id="CefSharp.Wpf" version="84.4.10" targetFramework="net46" />[m
   <package id="CredentialManagement" version="1.0.2" targetFramework="net46" />[m
   <package id="ExpressionEvaluator" version="2.0.4.0" targetFramework="net46" />[m
[31m-  <package id="Extended.Wpf.Toolkit" version="4.0.1" targetFramework="net46" />[m
   <package id="GameOverlay.Net" version="4.3.0" targetFramework="net46" />[m
   <package id="GSF.Core" version="2.3.302" targetFramework="net46" />[m
   <package id="Microsoft.Bcl.AsyncInterfaces" version="1.1.0" targetFramework="net472" />[m
